// Objective-C API for talking to github.com/lightningnetwork/lnd/mobile Go package.
//   gobind -lang=objc github.com/lightningnetwork/lnd/mobile
//
// File is generated by gobind. Do not edit.

#ifndef __Lndmobile_H__
#define __Lndmobile_H__

@import Foundation;
#include "Universe.objc.h"


@protocol LndmobileCallback;
@class LndmobileCallback;
@protocol LndmobileSendStream;
@class LndmobileSendStream;

@protocol LndmobileCallback <NSObject>
- (void)onError:(NSError*)p0;
- (void)onResponse:(NSData*)p0;
@end

@protocol LndmobileSendStream <NSObject>
- (BOOL)send:(NSData*)p0 error:(NSError**)error;
- (BOOL)stop:(NSError**)error;
@end

/**
 * GetInfo takes a serialized GetInfoRequest and returns single serialized
GetInfoResponse to the provided callback.
 */
FOUNDATION_EXPORT void LndmobileGetInfo(NSData* msg, id<LndmobileCallback> callback);

/**
 * SendPayment opens a bidirectional payment stream to the server, letting the
caller send serialized SendRequests on the returned SendStream. Serialized
SendResponses will be delivered to the provided callback.
 */
FOUNDATION_EXPORT id<LndmobileSendStream> LndmobileSendPayment(id<LndmobileCallback> callback, NSError** error);

FOUNDATION_EXPORT void LndmobileStart(NSString* appDir, id<LndmobileCallback> callback);

/**
 * SubscribeInvoices takes a serialized InvoiceSubscription and returns a
stream of Invoices to the provided callback.
 */
FOUNDATION_EXPORT void LndmobileSubscribeInvoices(NSData* msg, id<LndmobileCallback> callback);

@class LndmobileCallback;

@class LndmobileSendStream;

/**
 * Callback is an interface that is passed in by callers of the library, and
specifies where the responses should be deliver.
 */
@interface LndmobileCallback : NSObject <goSeqRefInterface, LndmobileCallback> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (void)onError:(NSError*)p0;
- (void)onResponse:(NSData*)p0;
@end

/**
 * SendStream is an interface that the caller of the library can use to send
requests to the server during the execution of a bidirectional streaming RPC
call, or stop the stream.
 */
@interface LndmobileSendStream : NSObject <goSeqRefInterface, LndmobileSendStream> {
}
@property(strong, readonly) id _ref;

- (instancetype)initWithRef:(id)ref;
- (BOOL)send:(NSData*)p0 error:(NSError**)error;
- (BOOL)stop:(NSError**)error;
@end

#endif
